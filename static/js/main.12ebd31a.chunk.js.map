{"version":3,"sources":["components/EncuestaRegistro.js","components/Login.js","components/EncuestaItem.js","components/EncuestaListado.js","App.js","serviceWorker.js","index.js"],"names":["EncuestaRegistro","handleSubmit","e","preventDefault","name","value","lastName","age","language","alert","data","parseInt","token","validarToken","registrarEncuesta","store","JSON","parse","localStorage","getItem","login","urlRegistro","props","urlAPi","console","log","fetch","method","body","stringify","headers","Headers","then","response","json","logout","removeItem","window","location","href","className","onClick","onSubmit","this","autoComplete","htmlFor","type","id","placeholder","ref","input","maxLength","Component","Login","username","password","urlLogin","status","setItem","accessToken","setState","error","state","EncuestaItem","scope","nombre","apellidos","edad","lenguaje","EncuestaListado","encuestas","urlListado","map","item","i","key","urlApiEncuestaBase","getToken","App","useState","setLogin","rol","setRol","useEffect","datosJwt","base64","split","replace","jsonPayload","decodeURIComponent","atob","c","charCodeAt","toString","slice","join","parseJwt","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.12ebd31a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass EncuestaRegistro extends Component {\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const name = this.name.value;\r\n        const lastName =  this.lastName.value;\r\n        const age = this.age.value;\r\n        const language = this.language.value;\r\n        \r\n        if(name == '' || lastName =='' || age == '' || lastName =='' || language ==''){\r\n            return alert('Complete todos los campos.');\r\n        }\r\n\r\n        const data = {\r\n            name,\r\n            lastName,\r\n            age: parseInt(age),\r\n            language\r\n        }\r\n\r\n        const token = this.validarToken();\r\n        this.registrarEncuesta(data, token);\r\n    }\r\n\r\n    validarToken = () => {\r\n        let store = JSON.parse(localStorage.getItem('login'));\r\n\r\n        if(store && store.login){\r\n            return store.token;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    registrarEncuesta = (data, token ) => {\r\n        const urlRegistro= this.props.urlAPi+`/api/v1/encuestas`;\r\n\r\n        console.log(data);\r\n        fetch(urlRegistro,{\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: new Headers({\r\n            'Authorization': 'Bearer '+token,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          })})\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n              console.log(response);\r\n              alert('Registro exitoso, gracias por participar.');\r\n        });\r\n\r\n    }\r\n\r\n    logout =() => {\r\n        localStorage.removeItem('login');\r\n        window.location.href = '';\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div>\r\n                <p className=\"text-right\" onClick={()=>{ this.logout()}}>Cerrar Sesi√≥n <i className=\"fas fa-arrow\"></i></p> \r\n                <div className=\"row justify-content-md-center\">\r\n                    <div className=\"col-md-8 col-xl-6\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title \">Registrar Voto</h5>\r\n                                \r\n                                    <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Nombres</label>\r\n                                            <input type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"Nombres\" ref={(input)=>this.name = input}/>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"lastName\">Apellidos</label>\r\n                                            <input type=\"text\" className=\"form-control\" id=\"lastName\" placeholder=\"Apellidos\" ref={(input)=>this.lastName = input}/>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"age\">Edad</label>\r\n                                            <input type=\"number\" className=\"form-control\" id=\"age\" placeholder=\"Edad\" maxLength=\"2\" ref={(input)=>this.age = input}/>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-check mb-2 text-center\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" id=\"radioJava\" name=\"language\" value=\"Java\" onClick={(input) => { this.language.value= 'Java' }}/>\r\n                                            <label className=\"form-check-label\" htmlFor=\"radioJava\">\r\n                                                Java\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-check mb-4 text-center\">\r\n                                            <input className=\"form-check-input\" type=\"radio\" id=\"radioC\" name=\"language\" value=\"C#\" onClick={(input) => { this.language.value= 'C#' }}/>\r\n                                            <label className=\"form-check-label\" htmlFor=\"radioC\">\r\n                                                C#&nbsp;&nbsp;&nbsp;\r\n                                            </label>\r\n                                            <input type=\"hidden\" ref={(input)=>this.language = input}/>\r\n                                        </div>\r\n\r\n                                        <button type=\"submit\" className=\"btn btn-lg btn-danger btn-block\">Votar</button>\r\n                                    </form>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <br /><br />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default EncuestaRegistro;","import React, { Component, useState, useEffect } from 'react'\r\nimport EncuestaRegistro from './EncuestaRegistro';\r\n\r\nexport default class Login extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            login:false\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const username = this.username.value;\r\n        const password =  this.password.value;\r\n        \r\n        if(username == '' || password ==''){\r\n            return alert('Complete todos los campos.');\r\n        }\r\n        const data = {\r\n            username,\r\n            password\r\n        }\r\n\r\n        this.login(data);\r\n    }\r\n\r\n    login = (data) =>{\r\n        const urlLogin= this.props.urlAPi+`/api/v1/security/login`;\r\n        try {\r\n            \r\n            fetch(urlLogin,{\r\n                method: 'POST',\r\n                body: JSON.stringify(data),\r\n                headers: new Headers({\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                })})\r\n                .then((response) => response.json())\r\n                .then((response) => {\r\n                    console.log(response);\r\n                    if(response.status == 'OK'){\r\n                        localStorage.setItem('login', JSON.stringify({\r\n                            login: true,\r\n                            token: response.accessToken\r\n                        }));\r\n        \r\n                        this.setState({login:true});\r\n                        \r\n                        window.location.href = '';\r\n                    }else{\r\n                        alert(response.body);\r\n                    }\r\n            });\r\n        } catch (error) {\r\n            alert('Error: Intente nuevamente');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    !this.state.login?\r\n                        <div className=\"row justify-content-md-center\">\r\n                        <div className=\"col-md-8 col-xl-6\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title \">Ingresar al Sistema</h5>\r\n                                    \r\n                                    <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n                                        <div className=\"form-group\">\r\n                                            <input type=\"text\" className=\"form-control\"placeholder=\"Usuario\"  ref={(input)=>this.username = input}/>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <input type=\"password\" className=\"form-control\" placeholder=\"Contrase√±a\" ref={(input)=>this.password = input}/>\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"btn btn-lg btn-danger btn-block\">Ingresar</button>\r\n                                    </form>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    : <EncuestaRegistro />\r\n\r\n                }\r\n                <br /><br />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n\r\n\r\nexport default class EncuestaItem extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                                        <th scope=\"row\">{this.props.id}</th>\r\n                                        <td>{this.props.nombre}</td>\r\n                                        <td>{this.props.apellidos}</td>\r\n                                        <td>{this.props.edad}</td>\r\n                                        <td>{this.props.lenguaje}</td>\r\n                                        </tr>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport EncuestaItem from './EncuestaItem'\r\n\r\nexport default class EncuestaListado extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { encuestas: [] }\r\n    }\r\n\r\n    validarToken = () => {\r\n        let store = JSON.parse(localStorage.getItem('login'));\r\n\r\n        if(store && store.login){\r\n            return store.token;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    componentWillMount() {        \r\n        const urlListado= this.props.urlAPi+`/api/v1/encuestas`;\r\n        const token = this.validarToken();\r\n\r\n        fetch(urlListado,{\r\n            headers: new Headers({\r\n            'Authorization': 'Bearer '+token\r\n          })})\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n            this.setState({ encuestas: response })\r\n        })\r\n    }\r\n    \r\n    logout =() => {\r\n        localStorage.removeItem('login');\r\n        window.location.href = '';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"text-right\" onClick={()=>{ this.logout()}}>Cerrar Sesi√≥n <i className=\"fas fa-arrow\"></i></p> \r\n\r\n                <div className=\"row justify-content-md-center\">\r\n                    <div className=\"col-12\">\r\n\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title \">Resultados</h5>\r\n                                <table className=\"table table-striped\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                        <th scope=\"col\">#</th>\r\n                                        <th scope=\"col\">Nombres</th>\r\n                                        <th scope=\"col\">Apellidos</th>\r\n                                        <th scope=\"col\">Edad</th>\r\n                                        <th scope=\"col\">Elecci√≥n</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    {\r\n                                        this.state.encuestas.map((item, i) => {\r\n                                            return <EncuestaItem key={item.id} \r\n                                                        id={item.id} \r\n                                                        nombre={item.name} \r\n                                                        apellidos={item.lastName} \r\n                                                        edad={item.age}\r\n                                                        lenguaje={item.language}\r\n                                                    />\r\n                                        })\r\n                                    }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport Login from './components/Login'\nimport EncuestaRegistro from './components/EncuestaRegistro'\nimport EncuestaListado from './components/EncuestaListado'\n\n//const urlApiEncuestaBase = 'http://localhost:8080';\nconst urlApiEncuestaBase = 'http://balanceador-cf-trabajo-final-1394212781.us-east-1.elb.amazonaws.com';\n\nfunction getToken (){\n  let store = JSON.parse(localStorage.getItem('login'));\n  if(store && store.login){\n    return store.token;\n  }\n  return '';\n}\n\nfunction logout(){\n  localStorage.removeItem('login');\n  window.location.href = '';\n}\n\nfunction parseJwt (token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return JSON.parse(jsonPayload);\n};\n\nfunction App() {\n  \n\n  const [login, setLogin] = useState(false);\n  const [rol, setRol] = useState(null);\n\n  useEffect(() => {\n    if(getToken()!=''){\n        const datosJwt = parseJwt(getToken());\n        setLogin(true)\n        setRol(datosJwt[\"cognito:groups\"][0]);\n      return;\n    }else{\n      setLogin(false)\n    }\n  }, []);\n\n  \n  return (\n    <div className=\"app container\">\n      <div className=\"jumbotron\">\n  <h1 className=\"text-center mb-3 text-info\">Sistema de Encuesta {rol}</h1>\n        { \n          !login? <Login urlAPi={urlApiEncuestaBase}/> : \n          <div>\n            {\n              rol=='ADMIN'? <EncuestaListado urlAPi={urlApiEncuestaBase} />: <EncuestaRegistro urlAPi={urlApiEncuestaBase} />\n            }\n            \n          </div>\n          \n        }\n        \n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}